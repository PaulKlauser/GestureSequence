name: Build & Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

#      - name: 'Authenticate to Google Cloud'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          credentials_json: ${{ secrets.GCLOUD_JSON_KEY }}
#
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'
#        with:
#          project_id: maintenance-log-9b4eb
#
      - name: 'Assemble Test APKs'
        run: ./gradlew gesturesequencetest:assembleDebug gesturesequencetest:assembleDebugAndroidTest
#
#      - name: 'Run Tests'
#        run: |
#          gcloud firebase test android run \
#          --type instrumentation \
#          --app gesturesequencetest/build/outputs/apk/debug/gesturesequencetest-debug.apk \
#          --test gesturesequencetest/build/outputs/apk/androidTest/debug/gesturesequencetest-debug-androidTest.apk \
#          --device model=Pixel2.arm,version=33,locale=en,orientation=portrait  \

      - name: flank run
        id: flank_run
        uses: Flank/flank@master
        with:
          # Flank version to run
          version: v21.03.1
          # Service account file content from secrets
          service_account: ${{ secrets.GCLOUD_JSON_KEY }}
          # Run Android tests
          platform: android
          # Path to configuration file from local repo
          flank_configuration_file: 'flank.yml'

      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: flank

      - name: Decode GPG Key
        if: ${{ github.event_name != 'pull_request' }}
        env:
          ENCODED_SIGNING_KEY: ${{ secrets.ENCODED_SIGNING_KEY }}
          GPG_KEY_PATH: ${{ secrets.GPG_KEY_PATH }}
        run: echo $ENCODED_SIGNING_KEY | base64 -d > $GPG_KEY_PATH

      - name: Publish to maven central
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GPG_KEY_PATH: ${{ secrets.GPG_KEY_PATH }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew gesturesequence:publishReleasePublicationToMavenRepository